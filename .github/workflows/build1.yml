name: Build infra docker build and deploy via eks 
on: 
  push: 
    branches: 
      - main
jobs: 
   build-and-deploy: 
     name: create infra 
     runs-on: ubuntu-latest 

     steps:
       - name: checkout-code
         uses: actions/checkout@v3 
       - name: Install terraform 
         uses: hashicorp/setup-terraform@v2 
         with: 
           terraform-version: 1.5.6 
       - name: Configure AWS credentials
         uses: aws-actions/configure-aws-credentials@v2
         with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: us-east-1
       - name: Initialize terraform 
         run: terraform init 
         working-directory: ./flask-project/terraform 
       - name: Terraform plan 
         run: terraform plan 
         working-directory: ./flask-project/terraform 
       - name: terraform apply 
         run: terraform apply --auto-approve
         
       - name: Update kubeconfig for EKS
         run: aws eks update-kubeconfig --name flask_cluster --region us-east-1

       - name: Test Kubernetes connection
         run: kubectl get nodes 
       - name: Set up python 
         uses: actions/setup-python@v4 
         with: 
           python-version: '3.12'
       - name: Setup docker login 
         uses: docker/login-action@v2 
         with: 
           username: ${{ secrets.DOCKER_USER }} 
           password: ${{ secrets.DOCKER_PASS }} 
       - name: build and push docker image 
         uses: docker/build-push-action@v5 
         with: 
          context: .
          push: true 
          tags: neeraj2806/flask-authentication:latest 
       - name: Scan docker image
         uses: aquasecurity/trivy-action@0.13.0 
         with: 
          image-ref: neeraj2806/flask-authentication:latest 
          format: table 
          exit-code: 1 
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH' 
       - name: Deploy to EKS 
         run: | 
           kubectl create namespace flask --dry-run=client -o yaml | kubectl apply -f -
           kubectl apply -f flask-project/k8s/ -n flask
           kubectl rollout status deployment/flask-deployment -n flask


