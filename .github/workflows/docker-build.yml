name: Build and Deploy Flask App to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: flask-auth
  REGISTRY_URL: a8bdb61a08f3249508e82b2f865e4d88-1033672356.us-east-1.elb.amazonaws.com:5000


jobs:
  build-and-deploy:
    name: Build Docker image and Deploy to EKS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region us-east-1 --name blackforge-eks-cluster

      - name: Test Kubernetes Access
        run: kubectl get nodes


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Trust Nexus as Insecure Registry
        run: |
            echo '{ "insecure-registries":["a8bdb61a08f3249508e82b2f865e4d88-1033672356.us-east-1.elb.amazonaws.com:5000"] }' | sudo tee /etc/docker/daemon.json
            sudo systemctl restart docker

      
      - name: Log in to Nexus Docker Registry
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login ${{ env.REGISTRY_URL }} -u ${{ secrets.NEXUS_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest

      - name: Trivy Scan - Docker Image
        uses: aquasecurity/trivy-action@0.13.0
        with:
          image-ref: flask-auth:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=flask-auth-devops
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Deploy Init Job
        run: |
          kubectl apply -f k8s/init-job.yaml -n flask
          kubectl wait --for=condition=complete job/db-init-job -n flask --timeout=60s || true
          kubectl delete job db-init-job -n flask || true
     
      - name: Create Nexus Pull Secret
        run: |
          kubectl create secret docker-registry nexus-docker-secret \
             --docker-server=${{ env.REGISTRY_URL }} \
             --docker-username=${{ secrets.NEXUS_USERNAME }} \
             --docker-password=${{ secrets.NEXUS_PASSWORD }} \
             --docker-email=dummy@example.com \
             --namespace=flask --dry-run=client -o yaml | kubectl apply -f -


      - name: Deploy to EKS
        run: |
          kubectl create namespace flask --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f k8s/ -n flask
          kubectl rollout status deployment/flask-app -n flask
